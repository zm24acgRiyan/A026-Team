<<<<<<< HEAD
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
install.packages("ggplot2")
library(ggplot2)
=======
print(table)
chi_result <- chisq.test(table)
print(chi_result)
# Create a contingency table
contingency_table <- table(data$Toss_Winner_Match_Winner)
# Perform a chi-square test
chi_square_test <- chisq.test(contingency_table)
cat("Chi-Square Test Statistic:", chi_square_test$statistic, "\n")
cat("Chi-Square Test Statistic:", chi_result$statistic, "\n")
library(readr)
Match <- read_csv("Match.csv")
View(Match)
data <- read.csv("Match.csv")
>>>>>>> 72723c9810d894fa1f3fb14d39c8652348c7fe45
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
<<<<<<< HEAD
=======
# Create a new column to indicate if Toss Winner also won the match
data$Toss_Winner_Match_Winner <- data$Toss_Winner == data$Match_Winner
>>>>>>> 72723c9810d894fa1f3fb14d39c8652348c7fe45
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
<<<<<<< HEAD
=======
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
table <- table(data$Toss_Winner, data$Match_Winner)
chi_result <- chisq.test(table)
library(readr)
Match <- read_csv("Match.csv")
View(Match)
library(readr)
library(readr)
Match <- read_csv("Match.csv")
View(Match)
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
library(readr)
Match <- read_csv("Match.csv")
View(Match)
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
chi_result$expected
# Subset the data to include only rows where Toss_Winner or Match_Winner is not NA (optional, adjust as needed)
subset_data <- subset(data, !is.na(Toss_Winner) & !is.na(Match_Winner))
# Create a contingency table for Toss_Winner and Match_Winner
toss_match_table <- table(subset_data$Toss_Winner, subset_data$Match_Winner)
# Print the contingency table
print(toss_match_table)
# Perform the Chi-squared test
chi_result <- chisq.test(toss_match_table)
# Output the results of the test
print(chi_result)
# Perform Chi-squared test with simulated p-value
chi_result <- chisq.test(toss_match_table, simulate.p.value = TRUE, B = 10000)
# Output the results of the test
print(chi_result)
# Perform Fisher's Exact Test
fisher_result <- fisher.test(toss_match_table)
chisq.test(toss_match_table)$expected
dim(toss_match_table)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Create a new column to indicate if Toss Winner also won the match
data$Toss_Winner_Match_Winner <- data$Toss_Winner == data$Match_Winner
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Create a new column to indicate if Toss Winner also won the match
data$Toss_Winner_Match_Winner <- data$Toss_Winner == data$Match_Winner
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
library(ggplot2)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
library(readr)
Match <- read_csv("Match.csv")
View(Match)
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
library(ggplot2)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
>>>>>>> 72723c9810d894fa1f3fb14d39c8652348c7fe45
#Code for chi- square test
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
<<<<<<< HEAD
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
print(data_plot)
str(data_plot)
View(data_plot)
View(data)
View(data_plot)
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
=======
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Create a new column to indicate if Toss Winner also won the match
data$Toss_Winner_Match_Winner <- data$Toss_Winner == data$Match_Winner
>>>>>>> 72723c9810d894fa1f3fb14d39c8652348c7fe45
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
<<<<<<< HEAD
total_matches <- nrow(data)
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
View(data)
=======
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
library(ggplot2)
>>>>>>> 72723c9810d894fa1f3fb14d39c8652348c7fe45
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
<<<<<<< HEAD
=======
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
library(readr)
Match <- read_csv("Match.csv")
View(Match)
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Create a new column to indicate if Toss Winner also won the match
data$Toss_Winner_Match_Winner <- data$Toss_Winner == data$Match_Winner
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
library(ggplot2)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
#Code for chi- square test
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
library(readr)
Match <- read_csv("Match.csv")
View(Match)
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Create a new column to indicate if Toss Winner also won the match
data$Toss_Winner_Match_Winner <- data$Toss_Winner == data$Match_Winner
# Calculate the counts for each category
toss_winner_win <- sum(data$Toss_Winner_Match_Winner == TRUE)
toss_winner_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Winner loses
toss_loser_win <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner != data$Match_Winner) # Toss Loser wins
toss_loser_loss <- sum(data$Toss_Winner_Match_Winner == FALSE & data$Toss_Winner == data$Match_Winner) # Toss Loser loses
# Total number of matches
total_matches <- nrow(data)
# Calculate the percentage for each category
toss_winner_win_percentage <- (toss_winner_win / total_matches) * 100
toss_winner_loss_percentage <- (toss_winner_loss / total_matches) * 100
toss_loser_win_percentage <- (toss_loser_win / total_matches) * 100
toss_loser_loss_percentage <- (toss_loser_loss / total_matches) * 100
# Create a new data frame with the calculated percentages
data_plot <- data.frame(
Toss_Outcome = c("Toss Winner", "Toss Winner", "Toss Loser", "Toss Loser"),
Result = c("Winner Wins", "Winner Loses", "Loser Wins", "Loser Losses"),
Percentage = c(toss_winner_win_percentage, toss_winner_loss_percentage, toss_loser_win_percentage, toss_loser_loss_percentage)
)
library(ggplot2)
# Create the stacked bar chart with the calculated values
ggplot(data_plot, aes(x = Toss_Outcome, y = Percentage, fill = Result)) +
geom_bar(stat = "identity", width = 0.6) +
geom_text(
aes(label = paste0(round(Percentage, 2), "%")),
position = position_stack(vjust = 0.5),
size = 4
) +
scale_fill_manual(
values = c(
"Winner Wins" = "lightblue",
"Winner Loses" = "orange",  # Added color for Toss Winner losing
"Loser Wins" = "salmon",
"Loser Losses" = "#8A2BE2"  # Violet color for Toss Loser losing
)
) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +  # Add space above bars
labs(
title = "Proportion of Matches Won and Lost by Toss Outcome",
x = "Toss Outcome",
y = "Proportion of Matches (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 12),
legend.title = element_blank()
)
#Code for chi- square test
data <- read.csv("Match.csv")
table <- table(data$Toss_Winner, data$Match_Winner)
print(table)
chi_result <- chisq.test(table)
print(chi_result)
>>>>>>> 72723c9810d894fa1f3fb14d39c8652348c7fe45
