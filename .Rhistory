library(readr)
Match <- read_csv("Match.csv")
View(Match)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate proportions
outcome_counts <- table(data$Outcome)
outcome_proportions <- prop.table(outcome_counts)
# Create a stacked bar plot
barplot(
outcome_counts,
beside = FALSE,
col = c("lightblue", "mistyrose", "lightgreen", "orange"),
main = "Match Outcomes Based on Toss Results",
ylab = "Number of Matches",
legend.text = names(outcome_counts),
args.legend = list(x = "topright")
)
# Add proportions to the plot
text(
x = barplot(outcome_counts, beside = FALSE, plot = FALSE),
y = outcome_counts,
labels = paste0(round(outcome_proportions * 100, 1), "%"),
pos = 3, cex = 0.8
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Create counts for each category
outcome_counts <- table(data$Outcome)
# Proportions by Outcome Category
outcome_breakdown <- as.data.frame.matrix(table(data$Outcome, data$Toss_Winner))
# Generate four stacked bar plots
par(mfrow = c(2, 2))  # Arrange 4 plots in a 2x2 grid
# Toss Winner, Match Winner
barplot(outcome_breakdown["Toss Winner, Match Winner", ],
col = c("lightblue", "mistyrose"),
main = "Toss Winner, Match Winner",
ylab = "Count",
legend.text = TRUE)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Create a table of counts for each Outcome category
outcome_counts <- table(data$Outcome)
# Extract individual counts for each category
toss_winner_match_winner <- sum(data$Outcome == "Toss Winner, Match Winner")
toss_winner_match_loser <- sum(data$Outcome == "Toss Winner, Match Loser")
toss_loser_match_winner <- sum(data$Outcome == "Toss Loser, Match Winner")
toss_loser_match_loser <- sum(data$Outcome == "Toss Loser, Match Loser")
# Create a matrix for the stacked bar plots
counts_matrix <- matrix(
c(toss_winner_match_winner, toss_winner_match_loser,
toss_loser_match_winner, toss_loser_match_loser),
nrow = 4,
byrow = TRUE
)
# Assign row and column names for clarity
rownames(counts_matrix) <- c("Toss Winner, Match Winner",
"Toss Winner, Match Loser",
"Toss Loser, Match Winner",
"Toss Loser, Match Loser")
colnames(counts_matrix) <- c("Count")
# Generate stacked bar plots
par(mfrow = c(2, 2))  # Arrange 4 plots in a 2x2 grid
# Create each plot
barplot(counts_matrix[1, , drop = FALSE],
main = "Toss Winner, Match Winner",
col = "lightblue",
ylab = "Count",
xlab = "Outcome")
barplot(counts_matrix[2, , drop = FALSE],
main = "Toss Winner, Match Loser",
col = "mistyrose",
ylab = "Count",
xlab = "Outcome")
barplot(counts_matrix[3, , drop = FALSE],
main = "Toss Loser, Match Winner",
col = "lightgreen",
ylab = "Count",
xlab = "Outcome")
barplot(counts_matrix[4, , drop = FALSE],
main = "Toss Loser, Match Loser",
col = "orange",
ylab = "Count",
xlab = "Outcome")
# Reset layout
par(mfrow = c(1, 1))
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate counts for grouped categories
grouped_counts <- matrix(
c(
sum(data$Outcome == "Toss Winner, Match Winner"),
sum(data$Outcome == "Toss Loser, Match Winner"),
sum(data$Outcome == "Toss Winner, Match Loser"),
sum(data$Outcome == "Toss Loser, Match Loser")
),
nrow = 2, byrow = TRUE
)
# Set row and column names
rownames(grouped_counts) <- c("Match Winner", "Match Loser")
colnames(grouped_counts) <- c("Toss Winner", "Toss Loser")
# Create the stacked bar plot
barplot(
grouped_counts,
beside = FALSE,
col = c("lightblue", "mistyrose"),
main = "Match Outcomes Based on Toss Results",
xlab = "Category",
ylab = "Count",
legend.text = rownames(grouped_counts),
args.legend = list(x = "topright")
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate counts for grouped categories
grouped_counts <- matrix(
c(
sum(data$Outcome == "Toss Winner, Match Winner"),
sum(data$Outcome == "Toss Loser, Match Winner"),
sum(data$Outcome == "Toss Winner, Match Loser"),
sum(data$Outcome == "Toss Loser, Match Loser")
),
nrow = 2, byrow = TRUE
)
# Set row and column names
rownames(grouped_counts) <- c("Match Winner", "Match Loser")
colnames(grouped_counts) <- c("Toss Winner", "Toss Loser")
# Create the stacked bar plot
barplot(
grouped_counts,
beside = FALSE,
col = c("lightblue", "mistyrose"),
main = "Match Outcomes Based on Toss Results",
xlab = "Category",
ylab = "Count",
legend.text = rownames(grouped_counts),
args.legend = list(x = "topright")
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate counts for grouped categories
grouped_counts <- matrix(
c(
sum(data$Outcome == "Toss Winner, Match Winner"),
sum(data$Outcome == "Toss Loser, Match Winner"),
sum(data$Outcome == "Toss Winner, Match Loser"),
sum(data$Outcome == "Toss Loser, Match Loser")
),
nrow = 2, byrow = TRUE
)
# Set row and column names
rownames(grouped_counts) <- c("Match Winner", "Match Loser")
colnames(grouped_counts) <- c("Toss Winner", "Toss Loser")
# Create the stacked bar plot
barplot(
grouped_counts,
beside = FALSE,
col = c("lightblue", "mistyrose"),
main = "Match Outcomes Based on Toss Results",
xlab = "Category",
ylab = "Count",
legend.text = rownames(grouped_counts),
args.legend = list(x = "topright")
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate counts for each category
counts <- c(
Toss_Winner_Match_Winner = sum(data$Outcome == "Toss Winner, Match Winner"),
Toss_Winner_Match_Loser = sum(data$Outcome == "Toss Winner, Match Loser"),
Toss_Loser_Match_Winner = sum(data$Outcome == "Toss Loser, Match Winner"),
Toss_Loser_Match_Loser = sum(data$Outcome == "Toss Loser, Match Loser")
)
# Create a matrix for the stacked bar plot
# Each column represents a bar, and rows represent stacks
counts_matrix <- matrix(
c(
counts["Toss_Winner_Match_Winner"], counts["Toss_Loser_Match_Winner"],  # Bar 1
counts["Toss_Winner_Match_Loser"], counts["Toss_Loser_Match_Loser"]     # Bar 2
),
nrow = 2,
byrow = TRUE
)
# Assign row and column names for clarity
rownames(counts_matrix) <- c("Match Winner", "Match Loser")
colnames(counts_matrix) <- c("Toss Winner", "Toss Loser")
# Plot the stacked bar plot
barplot(
counts_matrix,
beside = FALSE,                  # Stack the bars
col = c("lightblue", "orange"),  # Colors for Match Winner and Match Loser
main = "Match Outcomes Based on Toss Results",
ylab = "Number of Matches",
xlab = "Toss Outcome",
legend.text = rownames(counts_matrix),  # Add a legend for the stacks
args.legend = list(x = "topright")
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Categorize outcomes
data$Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate counts for each outcome
counts <- c(
Toss_Winner_Match_Winner = sum(data$Outcome == "Toss Winner, Match Winner"),
Toss_Winner_Match_Loser = sum(data$Outcome == "Toss Winner, Match Loser"),
Toss_Loser_Match_Winner = sum(data$Outcome == "Toss Loser, Match Winner"),
Toss_Loser_Match_Loser = sum(data$Outcome == "Toss Loser, Match Loser")
)
# Create a matrix for the stacked bar plot
counts_matrix <- matrix(
c(
counts["Toss_Winner_Match_Winner"], counts["Toss_Winner_Match_Loser"],  # Toss Winners
counts["Toss_Loser_Match_Winner"], counts["Toss_Loser_Match_Loser"]     # Toss Losers
),
nrow = 2,
byrow = TRUE
)
# Assign row and column names
rownames(counts_matrix) <- c("Match Winner", "Match Loser")
colnames(counts_matrix) <- c("Toss Winner", "Toss Loser")
# Plot the stacked bar chart
barplot(
counts_matrix,
beside = FALSE,                  # Stacked bars
col = c("lightblue", "mistyrose", "lightgreen", "orange"),  # 4 distinct colors
main = "Match Outcomes Based on Toss Results",
ylab = "Number of Matches",
xlab = "Toss Outcome",
legend.text = c("Toss Winner & Match Winner",
"Toss Winner & Match Loser",
"Toss Loser & Match Winner",
"Toss Loser & Match Loser"),
args.legend = list(x = "topright", bty = "n")
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Determine if Toss Winner matches Match Winner
data$Toss_Match_Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate proportions for each category
counts <- table(data$Toss_Match_Outcome)
proportions <- counts / sum(counts)
# Create a matrix for the stacked bar plot
proportions_matrix <- matrix(
c(
proportions["Toss Winner, Match Winner"], proportions["Toss Winner, Match Loser"],
proportions["Toss Loser, Match Winner"], proportions["Toss Loser, Match Loser"]
),
nrow = 2,
byrow = TRUE
)
# Assign row and column names for clarity
rownames(proportions_matrix) <- c("Match Winner", "Match Loser")
colnames(proportions_matrix) <- c("Toss Winner", "Toss Loser")
# Plot the proportional stacked bar chart
barplot(
proportions_matrix,
beside = FALSE,                  # Stacked bars
col = c("lightblue", "orange"),  # Two distinct colors for Match Winners and Match Losers
main = "Proportional Match Outcomes Based on Toss Results",
ylab = "Proportion of Matches",
xlab = "Toss Outcome",
legend.text = c("Match Winner", "Match Loser"),  # Legend for stacks
args.legend = list(x = "topright", bty = "n"),
ylim = c(0, 1)
)
# Load the dataset
data <- read.csv("Match.csv")
# Remove rows with missing values in the Match_Winner column
data <- na.omit(data)
# Determine if Toss Winner matches Match Winner
data$Toss_Match_Outcome <- ifelse(
data$Toss_Winner == data$Match_Winner,
"Toss Winner, Match Winner",
ifelse(
data$Toss_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Winner, Match Loser",
ifelse(
data$Match_Winner %in% c(data$Team_1, data$Team_2) & data$Toss_Winner != data$Match_Winner,
"Toss Loser, Match Winner",
"Toss Loser, Match Loser"
)
)
)
# Calculate proportions for each category
counts <- table(data$Toss_Match_Outcome)
proportions <- counts / sum(counts)
# Create a matrix for the stacked bar plot
proportions_matrix <- matrix(
c(
proportions["Toss Winner, Match Winner"], proportions["Toss Winner, Match Loser"],
proportions["Toss Loser, Match Winner"], proportions["Toss Loser, Match Loser"]
),
nrow = 2,
byrow = TRUE
)
# Assign row and column names for clarity
rownames(proportions_matrix) <- c("Match Winner", "Match Loser")
colnames(proportions_matrix) <- c("Toss Winner", "Toss Loser")
# Plot the proportional stacked bar chart
barplot(
proportions_matrix,
beside = FALSE,                  # Stacked bars
col = c("lightblue", "orange"),  # Two distinct colors for Match Winners and Match Losers
main = "Proportional Match Outcomes Based on Toss Results",
ylab = "Proportion of Matches",
xlab = "Toss Outcome",
legend.text = c("Match Winner", "Match Loser"),  # Legend for stacks
args.legend = list(x = "topright", bty = "n"),
ylim = c(0, 1)
)
